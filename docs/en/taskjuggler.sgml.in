<!DOCTYPE BOOK PUBLIC "-//OASIS//DTD DocBook V3.1//EN" [
<!ENTITY reference SYSTEM "reference.sgml">
]>
<book>
<bookinfo><title>The TaskJuggler Manual</title>
<author>
	<firstname>Chris</firstname><surname>Schl&auml;ger</surname>
</author>
<author>
	<firstname>Marc</firstname><surname>R&uuml;hrschneck</surname>
</author>
<date>Version @VERSION@, Thu Feb 14 14:33:25 CET 2002</date>
<copyright>
	<year>2002</year>
	<holder>Chris Schl&auml;ger</holder>
</copyright>
</bookinfo>

<preface><title>About this document</title>
<para>
This document describes TaskJuggler version @VERSION@
</para>
</preface>

<chapter><title>Introduction</title>
<sect1><title>About TaskJuggler</title>

<para>TaskJuggler is a project management tool for Linux and UNIX
system-based operating systems. Whether you want to plan your colleges
shifts for the next month or want to build a skyscraper - TaskJuggler
is the tool for you.</para>

<para>Instead of clicking yourself painfully through hundreds of
dialog boxes you specify your TaskJuggler project in a simple text
format.  You simply list all your tasks with their dependencies and
other properties. The information is sent through TaskJuggler and you
will get all sorts of reports in HTML or XML format.</para>

<para>TaskJuggler does not only honor the task interdependencies but
also takes resource constrains and prioritization into account. Using
TaskJuggler's powerful filtering and reporting algorithms you can
create task lists, resource usage tables, status reports, project
calendars and project accounting statements.</para>

</sect1>
<sect1><title>Features and Highlights</title>

<para>
<itemizedlist mark='opencircle'>

<listitem><para>Automatic scheduling of interdependent tasks with resource
conflict solver.</para>

<listitem><para>Powerful project description syntax with macro
support.</para>

<listitem><para>Flexible working hours and vacation handling.</para>

<listitem><para>Support for shifts.</para>

<listitem><para>Multiple time zone support.</para>

<listitem><para>Flexible resource grouping.</para>

<listitem><para>Project accounting support.</para>

<listitem><para>Task may have initial costs, finishing costs.</para>

<listitem><para>Resource may have running costs.</para>

<listitem><para>Support for simple profit/loss analysis.</para>

<listitem><para>HTML and XML report generation.</para>

<listitem><para>GANTT and PERT chart generators.</para>

<listitem><para>Support for plan and actual scenario
comparisons.</para>

<listitem><para>Project tracking support.</para>

<listitem><para>Groupware support by using a revision control system
such as CVS or RCS on the project description files.</para>

<listitem><para>Support for central resource allocation
database.</para>

<listitem><para>Support for cascaded and nested projects.</para>

<listitem><para>Import and export of sub-projects.</para>

<listitem><para>Unicode support.</para>

</itemizedlist>
</para>

</sect1>
<sect1><title>TaskJuggler on the Web</title>

<para>The official TaskJuggler web page can be found at <ulink
url="http://www.suse.de/~freitag/taskjuggler">
http://www.suse.de/~freitag/taskjuggler</ulink>.</para>

<para> Since the developers are mostly busy project managers
themselves, we have created two forums for users to help each other.
</para>

<para>The TaskJuggler user mailing list is hosted by <ulink
url="http://www.suse.de/en">SuSE</ulink>. You can subscribe at <ulink
url="http://www.suse.de/en/support/mailinglists">
http://www.suse.de/en/support/mailinglists/</ulink>.</para>

<para>The other forum is an IRC channel at <ulink
url="http://www.freenode.net">FreeNode.net</ulink>. The
channel is called #taskjuggler.</para>

</sect1>
<sect1><title>Change Log</title>
<sect2><title>Version 1.0.0 (2002-03-14)</title>

<para>
<itemizedlist mark='opencircle'>

<listitem><para>Initial stable public release.</para>

</itemizedlist>
</para>

</sect2>
<sect2><title>Version 1.0.1 (2002-03-15)</title>

<para>
<itemizedlist mark='opencircle'>

<listitem><para>Fixed completely broken global vacation
handling.</para>

<listitem><para>Added test case for vacation handling to test
suite.</para>

</itemizedlist>
</para>

</sect2>
<sect2><title>Version 1.1 (2002-05-27)</title>

<para>
<itemizedlist mark='opencircle'>

<listitem><para> Added some reports to the example file, so users
actually get a result of the TaskJuggler run.</para>

<listitem><para> Support for later completion of task and resources
added. By writing 'supplement task &lt;ID&gt; { ... }' an already
defined task can be extended. So it's easier now to create a file
which contains the vacations for all resources separate from the
resource definition itself. </para>

<listitem><para>Extended expression parser to work on string type
values as well.</para>

<listitem><para><xref linkend="logicalexpression"/> for hidetask,
rolluptask etc. can now contain functions as well. Currently there is
support for 'istask', 'isresource', 'isaccount', 'issubtaskof',
'contains', 'ismilestone'.</para>

<listitem><para>Moved the docs directory from TaskJuggler subdir to
topdir.</para>

<listitem><para>Added feature list and change-log to the
documentation.</para>

<listitem><para><xref linkend="property_reference"/> is now sorted in
alphabetical order.</para>

<listitem><para>Added lots of missing attributes to <xref
linkend="htmlaccountreport"/>.</para>

<listitem><para>Added missing <xref linkend="export"/> report to
documentation. Export reports can now contain the scheduled tasks as
well as the resource allocations.</para>

<listitem><para>New keywords
<computeroutput>planbooking</computeroutput> and
<computeroutput>actualbooking</computeroutput> to enter fixed bookings
of <xref linkend="resource"/> in the resource declaration.</para>

<listitem><para>Added new example project to illustrate the use of export in big
projects that are split into sub projects.</para>

<listitem><para>HTML comment in HTML report files is now using correct
syntax.</para>

<listitem><para>Partial fix for correct time zone handling.</para>

<listitem><para>Support for STDIN reading and STDOUT writing added. This can be
used when calling TaskJuggler from CGI scripts.</para>

</itemizedlist>
</para>

</sect2>
<sect2><title>Version 1.2 (2002-06-17)</title>

<para>
<itemizedlist mark='opencircle'>

<listitem><para>Fixed sorting by ID for all HTML reports.</para>

<listitem><para>Fixed bug in vacation handling. Vacations that started before
the project were silently ignored.</para>

<listitem><para>Added support for <xref
linkend="export_taskattributes"/>.</para>

<listitem><para>XML Output changes: Basically the XML output is more
simple to parse, some values were added and corrected.</para>

<listitem><para>Added a first simple TaskJuggler XML-output viewer for
KDE.  See ktjview/README for installation. Configure with KDE support
enabled.</para>

<listitem><para>Disabled ical support by introducing the HAVE_ICAL
switch in the code.  The switch is not yet configure supported, but
building with --with-kde-support should work now without failing on
missing libical.</para>

<listitem><para>Support for URLs in HTML reports added.</para>

<listitem><para>Legacy HTML elements have been removed from HTML reports.
TaskJuggler now creates pure HTML 4.0 code.</para>

<listitem><para>Added support for insertion of raw HTML code into
reports. This can be achived with <xref
linkend="htmltaskreport_rawhead"/> and <xref
linkend="htmltaskreport_rawtail"/>.</para>

<listitem><para>Added support for user defined style sheets in HTML
reports by using the <xref linkend="htmltaskreport_rawstylesheet"/>
attribute.</para>

<listitem><para>Strings can now be enclosed in either single or double
quotes. A single quoted string may contain double quotes and vice
versa.</para>

<listitem><para>Working hours can now be declared on project level.
This also determines if a day is considered a working day or
not.</para>

<listitem><para>With <xref linkend="task_startbuffer"/> and <xref
linkend="task_endbuffer"/> you can now specify that there might be some air
left in a certain task.</para>

<listitem><para>Remo's GANTT chart generators have been included in the
<filename>Contrib</filename> directory.</para>

</itemizedlist>
</sect2>
<sect2><title>Version 1.3 (2002-07-30)</title>

<para> <itemizedlist mark='opencircle'>

<listitem><para>This release features some bigger cleanup changes.
Some of them do break compatibility with older version of taskjuggler.
While we try very hard to avoid such situations, we do prefer to have
a consistent and logical language. Since the TaskJuggler user base is
still comparatively small, we decided to break compatibility now
rather than later. The changes are fairly minor, so they won't affect
many users.  Please see further down for more details.</para>

<listitem><para>Added Perl/Tk tool to view GANTT charts and other
project information.</para>

<listitem><para>Added Pert-chart generator from Philippe
Midol-Monnet.</para>

<listitem><para>Added support for shifts in <xref
linkend="task_shift"/>
and task <xref linkend="task_allocate_shift"/>.</para>

<listitem><para>Fixed vim syntax highlighting. Some keywords were missing.</para>

<listitem><para>Export report had syntax bug when milestones were present.
Fixed.</para>

<listitem><para>Fixed handling of week, month and year duration specifications.</para>

<listitem><para><link linkend="project_now">now</link> and <link
linkend="project_timingresolution">timingresolution</link> are no
longer properties. They are now optional attributes of <link
linkend="project">project</link>. They currently still work as
properties as well but a warning is issued and they will be removed in
the next major release.</para>

<listitem><para><link
linkend="project_dailyworkinghours">dailyworkinghours</link>
and <xref linkend="project_yearlyworkingdays"/> have
been implemented to allow the user for better control over the
conversion from working days to working hours.</para>

<listitem><para>Added support for a <link
linkend="task_allocate_select">select</link>
function for alternative resource allocations.</para>

<listitem><para>All load values in HTML reports can now be scaled by
specifying a <link
linkend="htmltaskreport_loadunit">loadunit</link>.</para>

<listitem><para>Improved readability of scheduler error messages.</para>

<listitem><para>Added new example project to the Examples directory to
illustrate how to create shift schedules with TaskJuggler.</para>

<listitem><para>Fixed scheduler for working hours around midnight.
This bug affected shifts as well as general working hours.</para>

<listitem><para>Extended timezone support. TaskJuggler will now
operate properly when TZ environment variable is set.</para>

</itemizedlist>
</sect2>
<sect2><title>Next Version (Some Day)</title>
<para>
<itemizedlist mark='opencircle'>

<listitem><para>Only export references to tasks which are exported in
the same report.</para>

<listitem><para>Allow supplements of tasks within task definitions.</para>

<listitem><para>Converted documentation to DocBook. We now have a much
nicer and more structured manual. A printable version is available as
well now.</para></listitem>

<listitem><para>Fixed HTML code for bookedlight cells. Those were
redered without background on some browsers.</para></listitem>

<listitem><para>Added support for multi-level sorting in reports.
<link linkend="htmltaskreport_sorttasks">sorttasks</link> and <link
linkend="htmltaskreport_sortresources">sortresources</link> now
take multiple criteria.</para></listitem>

<listitem><para>Several bugs in the sorting direction code have been
fixed. <computeroutput>startup</computeroutput>,
	<computeroutput>startdown</computeroutput>,
	<computeroutput>endup</computeroutput> and
	<computeroutput>enddown</computeroutput> have been replaced by 
	<computeroutput>planstartup</computeroutput>,
	<computeroutput>planstartdown</computeroutput>,
	<computeroutput>planendup</computeroutput> and
	<computeroutput>planenddown</computeroutput>.
</para></listitem>

<listitem><para>The optional attribute <link
linkend="include_taskprefix">taskprefix</link> has been added to <link
linkend="include">include</link>. This allows exported projects to be
added at arbitrary points in the task tree.</para></listitem>

<listitem><para>The optional attribute <link
linkend="export_taskroot">taskroot</link> has been added to <link
linkend="export">export</link>. This allows to export sub tasks of a
tasks to be exported as root-level tasks.</para></listitem>

<listitem><para>The project file reader has been made fully Unicode
aware. It is now possible to use non-ASCII characters in text strings
and comments.</para></listitem>

<listitem><para>Two new functions have been added for use in <link
linkend="logicalexpression">logical expressions</link>.
<computeroutput>isplanallocated</computeroutput> and
<computeroutput>isactualallocated</computeroutput> can be used to show
only resources that have been allocated to a certain project in a
given time frame.</para></listitem>

<listitem><para>Made week of year calculation ISO 8601:1988 and DIN
1355 compliant. This also affects the month and year correlation in
weekly reports.</para></listitem>

<listitem><para>Support for a <computeroutput>flags</computeroutput>
columns added to HTML reports.</para></listitem>

</itemizedlist> </para>

</sect2>
</sect1>
</chapter>
<chapter><title>Installation</title>
<sect1><title>Obtaining TaskJuggler </title>

<para>TaskJuggler may be obtained from the following web site:</para>

<para><ulink url="http://www.suse.de/~freitag/taskjuggler">
http://www.suse.de/~freitag/taskjuggler/</ulink></para>
</sect1>
<sect1><title>Requirements</title>

<para>To build and run TaskJuggler, you need:</para>

<para><itemizedlist mark='opencircle'>

<listitem><para>qt3 &mdash; The <ulink
url="ftp://ftp.trolltech.com/qt/source"> Qt C++ class library</ulink>
version 3.0 or higher</para>

<listitem><para> GNU Compiler Collection &mdash; We are currently
using GCC 3.2 to develop TaskJuggler. Since we try to write the code
platform independant and ANSI standard compliant it should work with
other compilers as well.</para>

</itemizedlist></para>

<para>This version of TaskJuggler was built and tested on SuSE Linux 8.1 on
various hardware platforms.</para>

</sect1>
<sect1><title>Compilation and Installation</title>
<para>
Before compiling TaskJuggler you need to set the
<computeroutput>QTDIR</computeroutput> environment variable to the
base directory of your Qt version. This is normally
<computeroutput>/usr/lib/qt3</computeroutput>.

To compile and install TaskJuggler on your system, type the following 
in the base directory of the TaskJuggler distribution:

<screen>
% ./configure
% make
% make install
</screen>

</para><para>
Since TaskJuggler uses <computeroutput>autoconf</computeroutput>, you
should have no trouble compiling it. If you have problems, please
report them to the TaskJuggler developers mailing list at <ulink
url="mailto:taskjuggler-devel@suse.com">
taskjuggler-devel@suse.de</ulink> in English.</para>

</sect1>
</chapter> 
<chapter><title>Usage</title> 
<sect1><title>Basics</title>

<para>TaskJuggler uses one or more text files to describe a project.
The main project should be placed in a file with the
<computeroutput>.tjp</computeroutput> extension. This main project may
contain several subprojects. Such subprojects should be placed in
files with the <computeroutput>.tjsp</computeroutput> extension. These
subprojects are included in the main project during compile
time.</para>

</sect1> 
<sect1><title> General Usage</title>

<para>TaskJuggler works like a compiler. You provide the source
files, it computes the contents and creates the output files.</para>

<para>Let's say you have a project file called
<filename>AcSo.tjp</filename>. It contains the tasks of your project
and their dependencies. To schedule the project and create report
files you have to ask TaskJuggler to process it.</para>

<para><screen>
% taskjuggler AcSo.tjp
</screen> </para>

<para>TaskJuggler will try to schedule all tasks with the specified
conditions and generate the reports that were requested with the <link
linkend="htmltaskreport">htmltaskreport</link>, <link
linkend="htmlresourcereport">htmlresourcereport</link> or other report
attributes in the input file.</para>

</sect1> 
<sect1><title> The Command Line Options</title>

<para>To get a list of the command line options of TaskJuggler, use
the <computeroutput>--help</computeroutput> option:</para>

<para><screen>
% taskjuggler --help
</screen></para>

<para>Calling TaskJuggler with . as input filename will cause reading
from stdin. To redirect output to stdout you can specify -- as
filename for reports. This feature can for example be used to generate
dynamic html pages from CGI scripts.</para>

</sect1> 
<sect1><title> Reporting Bugs and Sending Feedback</title>

<para>All official releases of TaskJuggler are meant to be stable
releases unless explicitly noted differently. But our test suite is
still very small and some features cannot be tested automatically very
well. So it's very likely that your current version of TaskJuggler
contains bugs. If you find a bug please follow this procedure:</para>

<para><itemizedlist mark='opencircle'>

<listitem><para>Read this manual to make sure that it is actually a
bug and not a feature.</para>

<listitem><para>Check the TaskJuggler <ulink
url="http://www.suse.de/~freitag/taskjuggler">web page</ulink>.
Possibly the bug was already found and a patch or workaround
exists.</para>

<listitem><para>Try to create a test project that is as small as
possible but still reproduces the bug.</para>

<listitem><para>Send the test project and a detailed description of
the problem to the developer mailing list at <ulink
url="mailto:taskjuggler-devel@suse.com">taskjuggler-devel@suse.com</ulink>.</para>

</itemizedlist></para>

</sect1> 
</chapter>
<chapter><title>An Example</title>

<para>The easiest way to give an overview of the functionality of
TaskJuggler is with an example.</para>

<sect1><title> Introducing the Example: Accounting Software</title>

<para>Refer to section <xref linkend="example"> for a printout of the
example.</para>

<para>In this project, we plan to create an accounting program. The project
starts on January 16, 2002, and its end is planned for June 30, 2002. The
project will consist of the following tasks:</para>

<para><variablelist>
<varlistentry><term>Specification</term>
<listitem><para>The developers set up the specification for the
software and documentation.</para></listitem>
</varlistentry>
<varlistentry><term>Software development</term>
<listitem><para>This is the whole process of coding the software. It
includes the following subtasks:</para>

<para><variablelist>
<varlistentry><term>Database coupling</term>
<listitem><para>Connection procedures to the
database.</para></listitem>
</varlistentry>
<varlistentry><term>Graphical user interface</term>
<listitem><para>Creating the user interface.</para></listitem>
</varlistentry>
<varlistentry><term>Back-end functions</term>
<listitem><para>Creating the calucation and computing routines for the
data.</para></listitem>
</varlistentry>
</variablelist></para>

<varlistentry><term>Software testing</term>
<listitem><para>Testing the software. There are two stages of software
testing:</para>

<para><variablelist>
<varlistentry><term>Alpha test</term>
<listitem><para>Test the software in alpha stage.</para></listitem>
</varlistentry>
<varlistentry><term>Beta test</term>
<listitem><para>Test the software in beta stage. The customer normally takes
part in this beta test phase.</para></listitem>
</varlistentry>
</variablelist></para></listitem>

<varlistentry><term>Manual</term>
<listitem><para>Creating the printed user manual</para></listitem>
</varlistentry>
<varlistentry><term>Ship to customer</term>
<listitem><para>This task includes all steps necessary to communicate
to the customer. This is an important task, as it defines the basic milestones
of the project. For example, we cannot start the project before the contract
is signed. It is also important to check the planned date of shipping the
software to the customer.</para>

<para>This process consist of the following subtasks:</para>

<para><variablelist>
<varlistentry><term>Projectstart</term>
<listitem><para>This milestone defines the start of the
project.</para></listitem>
</varlistentry>
<varlistentry><term>Betaversion</term>

<listitem><para>This marks the start of the beta test. Normally, the
customer wants to see a beta version, so this is also a
milestone.</para></listitem>

</varlistentry>
<varlistentry><term>Ship product to customer</term>

<listitem><para>This is the date when the project has ended.  Software
is in final stage, the manual is ready and printed, and everything is
shipped to the customer.</para></listitem>

</varlistentry>
</variablelist></para>

</varlistentry>
</variablelist></para>
</chapter>
<chapter><title> The Basic Parts of a <filename>.tjp</filename> File</title>

<para>This chapter gives an overview of the most important commands,
properties, and attributes used in a typical project file. Refer to
<link linkend="reference">Property Reference</link> for a complete
list of commands and properties usable in project files.</para>

<para><screen>
project acso "Accounting Software" "1.0" 2002-01-16 2002-06-30
</screen></para>

<para>This statement informs TaskJuggler about the most important things on the
project. These things include:</para>

<para><simplelist type=horiz columns=2>
<member><computeroutput>acso</computeroutput></>
<member>The project ID, unique within the scope of the project</>
<member><computeroutput>"Accounting Software"</computeroutput></>
<member>The short description of the project</>
<member><computeroutput>1.0</computeroutput></>
<member>The version of the schedule</>
<member><computeroutput>2002-01-16 2002-6-30</computeroutput></>
<member>Begin and end dates of the project</>
</simplelist></para>

<para>Refer to the <link linkend="project">project</link> command in the
reference for details.</para>

<para><screen>
resource dev "Developers" { ... }
</screen></para>

<para>This defines a resource with the unique ID
<computeroutput>dev</computeroutput>. It will be shown as
<computeroutput>Developers</computeroutput> on the schedule
later.</para>

<para><simplelist type=horiz columns=2>
<member><computeroutput>dev</computeroutput></>
<member>The resource ID, unique within the TaskJuggler project</>
<member><computeroutput>"Developers"</computeroutput></>
<member>The real name of the resource</>
</simplelist</para>

<para>In the example, the resource consists of the three developers
(<computeroutput>dev1</computeroutput>,
<computeroutput>dev2</computeroutput>, and
<computeroutput>dev3</computeroutput>). For every resource, you can
specify additional attributes in separate curly braces {}.</para>

<para>Refer to the <link linkend="resource">resource</link> command in the
reference for details.</para>

<para><screen>
task AcSo "Accounting Software" { ... }
</screen></para>

<para>This defines the task <computeroutput>AcSo</computeroutput>. In
this example, it represents the whole project to build the Accounting
Software. A task may contain several subtasks.</para>

<para>Refer to the <link linkend="task">task</link> command in the
reference.</para>

<para><screen>
htmltaskreport "tasks.html" name,start,end,resources,weekly
</screen><para>

<para>This command creates a task-based report in html and saves it as
<computeroutput>tasks.html</computeroutput> to the current directory.
The report will include the task name, start and end of the task, and
the necessary resources. The report's resolution will be in
weeks.</para>

<para>Refer to the <link
linkend="htmltaskreport">htmltaskreport</link> command in the
reference for details.</para>

</chapter>
<chapter><title> Other Useful Commands and Environments</title>

<para><screen>
now 2002-02-17
</screen></para>

<para>This sets the current date to 2002-02-17. This is the day or week that
will be highlighted in the report later. This helps with printing and
creating reports for the future or the past.</para>

<para><screen>
rate 310.0
currency "EUR"
</screen></para>

<para>Sets the global monetary currency to Euro. It is used for printing out
cost and revenue values in the correct currency.</para>

<para><screen>
account dev "Development" cost {}
</screen></para>

<para>This creates an account <computeroutput>dev</computeroutput> as a
<computeroutput>cost</computeroutput> account. There is also a account
type <computeroutput>revenue</computeroutput>, which is used to cover
all kinds of income (see reference: <xref linkend="account">).</para>

</chapter>
&reference;
<chapter id="example"><title>The Example: Accounting Software</title>

<para><screen>
project fibu "Accounting Software" "1.0" 2002-01-16 2002-05-01 {
now 2002-03-04
}

# The daily rate of all resources
rate 310.0
currency "EUR"

# This is one way to form teams
macro allocate_developers [
allocate dev1
allocate dev2 { load 0.5 }
allocate dev3
]

resource dev "Developers" {
resource dev1 "Paul Smith"
resource dev2 "Larry Bono"
resource dev3 "Klaus Mueller" { vacation 2002-02-01 - 2002-02-05 }
}
resource misc "The Others" {
resource test "Peter Murphy" { maxeffort 0.8 rate 240.0 }
resource doc "Dim Sung"
}

account dev "Development" cost {}
account doc "Dokumentation" cost {}
account rev "Payments" revenue {}

task AcSo "Accounting Software" {

account dev

task spec "Spezification" {
effort 20d
${allocate_developers}
depends !deliveries.start
}

task software "Software Development" {

priority 1000

task database "Database coupling" {
	effort 20d
	depends !!spec
	allocate dev1
	allocate dev2
}

task gui "Graphical User Interface" {
	effort 35d
	actualeffort 40d
	depends !database, !backend
	allocate dev2
	allocate dev3
}

task backend "Back-End Functions" {
	effort 30d
	complete 80 # This task is ahead of schedule.
	depends !database, !!spec
	allocate dev1
	allocate dev2
}

}

task test "Software testing" {

task alpha "Alpha Test" {
	effort 1w
	depends !!software
	allocate test
	allocate dev2
}

task beta "Beta Test" {
	effort 4w
	depends !alpha
	allocate test
	allocate dev1
}
}

task manual "Manual" {
effort 10w
depends !deliveries.start
allocate doc
allocate dev3
account doc
}

task deliveries "Ship to customer" {

account rev

task start "Projectstart" {
	milestone
	start 2002-01-16
	actualstart 2002-01-20
	startcredit 30000.0
}

task beta "Betaversion" {
	milestone
	depends !!test.alpha
	startcredit 10000.0
}

task done "Ship Product to customer" {
	milestone
# Uncomment this to trigger a warning that the project is late.
#      maxend 2002-04-17
	depends !!test.beta, !!manual
	startcredit 20000.0
}
}
}

htmltaskreport "AcSo-Overview.html" {
columns no, name, start, end, weekly, effort
headline "Accounting Software Project"
caption "This table shows the load for each task on a weekly basis.
All values are man-days. Additionally the resources used for each
task are listed."
}

htmltaskreport "AcSo-Tasks.html" {
columns no, name, start, end, daily
headline "Accounting Software Project"
caption "This table shows the load of each day for all the tasks.
Additionally the resources used for each task are listed. Since the
project start was delayed, the actual schedule differs significantly
from the original plan."
hideresource 0
showactual
}

htmlresourcereport "AcSo-Resources.html" {
columns no, name, weekly, effort
end 2002-04-30
loadunit hours
headline "Weekly working hours for the Accounting Software Project"
}

htmlaccountreport "AcSo-Accounting.html" {
columns no, name, total, monthly
headline "P and L for the Accounting Software Project"
caption "The table shows the profit and loss analysis as well as the
cashflow situation of the Accounting Software Project."
accumulate
showactual
}
</screen></para>
</chapter>
<chapter><title>Questions and Answers</title>
<para>Nothing here yet></para>
</chapter>
<chapter><title>Copyright</title>

<para>TaskJuggler Copyright 2001, 2002 Chris Schlaeger
&lt;cs@suse.de&gt;</para>

<para>This program is free software. You can redistribute it and modify it
under the terms of the GNU General Public License version 2 as
published by the Free Software Foundation.</para> 

<para>This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.</para>

<para>You should have received a copy of the GNU General Public License
along with this program. If not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</para>

</chapter>
<chapter><title>Trademarks</title>

<para>Linux is a registered trademark of Linus Torvalds.</para>

<para>UNIX is a registered trademark and The Open Group is a trademark of
The Open Group in the US and other countries.</para>

<para>TaskJuggler is a trademark of Chris Schl&auml;ger.</para>
</chapter>
</book>

