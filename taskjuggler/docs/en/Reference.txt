Specification of the TaskJuggler input format
=============================================

Version: "$Id$"

A project file contains a list of property declarations. Each property
may have fixed and optional attributes. It is recommended to use the
extension ".tjp" for TaskJuggler project files and to use the
extension ".tjsp" for sub project (include) files.

There are two ways to annotate a project file with comments. All text
after a '#' will be ignored. Comments that span multiple rows must be
started with '/*' and ended with '*/'.

Attributes may be of the following types:

ID: A string that may consist of the characters A-Z, a-z, 0-9 and _.
It may not start with a number.

GLOBAL_ID: A GLOBAL_ID may have the same characters as ID but
additionally it may contain '.' and '!'. '!' may only be used at the
beginning and is used in relative IDs. A '!' means one scope up.

STRING: A string may contain any characters and is enclosed in '"'. A
string may include line breaks.

DATE: A DATE is an ISO compliant date YYYY-MM-DD[-hh:mm]. Hour, minute
and second are optional. If not specified the values are set to 0.

TIME: A time in the format HH:MM.

UNIT: May be h for hours, d for days, w for weeks, m for months, y for
years.

WEEKDAY: May be
mon for Monday
tue for Tuesday
wed for Wednesday
thu for Thursday
fri for Friday
sat for Saturday
sun for Sunday

INTEGER: An integer number.

REAL: A real number (e.g. 3.14).

LOGICALEXPRESSION: This is a logical expression consting of logical
operations and '&', or '|' and not '~' to operation on INTERGER values
or symbols. As symbols currently only flag names are supported. The
expression is evaluated from left to right. '~' has a higher
precedance than other operators. Use braces to avoid ambigous
operations. If flagFoo, flagFooBar and flagBar are declared flags, the
following example is a correct expression:

(flagFoo | flagFooBar) & ~flagBar

SORTINGCRITERIA: See attribute description for allowed values.


Optional attributes of a property must be enclosed by {}.

===============================================================================
===============================================================================

This is a list of all properties:

===============================================================================
project <id> <name> <version> <start> <end>
id: ID 
name: STRING 
version: STRING 
start: DATE 
end: DATE

Optional attributes: none

The project property is mandatory and should be the first property in
a project file. <id> is the default project ID used to register
resource allocations in a global database. <name> is the name of the
project. <version> is the version of the project file. Typically this
is the CVS id. <start> and <end> define the timeframe of the
project. The end may be well after the end of the last task but must
be specified to terminate the scheduling process.

===============================================================================
task <id> <name>
id: ID
name: STRING

Optional attributes:

-------------------------------------------------------------------------------
task <id> <name>
id: ID
name: STRING

A task may have sub tasks. In case sub tasks are specified many of the
other attributes are illegal. See attributes for details.

-------------------------------------------------------------------------------
note <text>
text: STRING

A longer description of the task.

-------------------------------------------------------------------------------
start <date>
date: DATE

The planned start date for the task. In case no start date is given,
the task must depend on other tasks. If no dependency is given the
project start date is used. Setting a start date will switch the
scheduling policy to ASAP.

-------------------------------------------------------------------------------
end <date>
date: DATE

The planned end date for the task. In case no end date is given, the
task must depend on other tasks. If no dependency is given the project
start date is used. Setting and end date will switch the scheduling
policy to ALAP.

-------------------------------------------------------------------------------
minstart <date>
date: DATE

The earliest wanted start date for the task. In case this date can't
be met the task is marked in the task list.

This attribute is inherited by sub tasks.

-------------------------------------------------------------------------------
maxstart <date>
date: DATE

The latest wanted start date for the task. In case this date can't be
met the task is marked in the task list.

This attribute is inherited by sub tasks.

-------------------------------------------------------------------------------
actualstart <date>
date: DATE

The actual start date of the task. This can be specified to do
plan/actual comparisons.

-------------------------------------------------------------------------------
minend <date>
date: DATE

The earliest wanted end date for the task. In case this date can't be
met the task is marked in the task list.

This attribute is inherited by sub tasks.

-------------------------------------------------------------------------------
maxend <date>
date: DATE

The latest wanted end date for the task. In case this date can't be
met the task is marked in the task list.

This attribute is inherited by sub tasks.

-------------------------------------------------------------------------------
actualend <date>
date: DATE

The actual end date of the task. This can be specified to do
plan/actual comparisons.

-------------------------------------------------------------------------------
length <number> <unit>
number: REAL
unit: UNIT

Specifies the time the task occupies the resources. This is working
time, not calender time. 7d means 7 working days and not one week.

-------------------------------------------------------------------------------
duration <number> <unit>
number: REAL
unit: UNIT

Specifies the time the task occupies the resources. This is calender
time, not working time. 7d means one week.

-------------------------------------------------------------------------------
effort <number> <unit>
number: REAL
unit: UNIT

Specifies the effort needed to complete the task. An effort of 4d can
be done with 2 full-time resources in 2 days.

-------------------------------------------------------------------------------
complete <percent>
percent: INTEGER

Specifies how many percent the task is already completed. This can be
usefull for project tracking.

-------------------------------------------------------------------------------
allocate <id>
id: ID

Optional attributes:

...............................................................................
load <days>
days: REAL

Specifies how many days the resource can be used per day for this
task. A load of 0.5 means that the resource will be used for at most
half a working day for this task.

...............................................................................
alternative <id>[,<id>]
id: ID

Specifies IDs of alternative resources. One of the alternatives will
be used in case the main resource is not available. If multiple
resources are used they must be seperated by a comma.

...............................................................................
persistent

If set the first available resource out of the specified resource and
it's specified alternatives will be used for the whole task.

...............................................................................

Specifies a resource that can be used to fullfill the task. More than
one resource can be  specified for a task. All resources must be
declared before they can be used. Ref. 'resource'. Resource
allocations are mandatory for 'effort' based tasks. Task with a
'length' or 'duration' specification may have resources allocated but
do not require them.

-------------------------------------------------------------------------------
scheduling <policy>
policy: ID

This specifies the scheduling policy for the task. Possible values are:

ASAP: As soon as possible. The task is scheduled to happen as early as
possible.

ALAP: As late as possible. The task is scheduled to happen as late as
possible.

The scheduling policy is automatically changed if the 'depends' or
'preceeds' attributes are used. If multiple attributes that affect the
scheduling policy are used, that last attribute determines the
effective policy.

-------------------------------------------------------------------------------
depends <id>[,<id>]
id: GLOBAL_ID

Specifies that the task cannot start before the task with the
specified IDs have been finished. If multiple IDs are specified they
must be seperated by a comma. ids must be either global or relative. A
relative ID starts with a number of '!'. Each '!' moves the scope to the
parent task. Global IDs do not contain '!' but have IDs seperated by
dots.

    Example:
    task foo1 {
      task foo2 { start 2002-12-04 }
      task foo3 { depends !foo2 }
    }
    task bar { depends foo1.foo2 }

By using the 'depends' attribute the scheduling policy is
automatically set to ASAP. If 'depends' and 'preceeds' are used the
last policy counts.

-------------------------------------------------------------------------------
preceeds <id>[,<id>] id: GLOBAL_ID

Specifies that this tasks preceeds the tasks with the specified
IDs. If multiple tasks are specified they must be seperated by a
comma. The format is equivalent to the 'depends' attribute.

By using the 'preceeds' attribute the scheduling policy is
automatically set to ALAP. If 'depends' and 'preceeds' are used the
last policy counts.

-------------------------------------------------------------------------------
flags <id>[,<id>]
id: ID

Attaches flags to the task. Flags can be used to hide the information
about the task in the output. Flags must be declared before they can
be used. Ref. 'flags'.

Flags are inherited by sub tasks from their parent tasks if they are
declared before the sub task. Flags that are declared after the sub
tasks are NOT inherited.

-------------------------------------------------------------------------------
responsible <id>
id: ID

The id of the resource that is responsible for this task.

This attribute is inherited by sub tasks if specified prior to the
definition of the sub task.

-------------------------------------------------------------------------------
priority <value>
value: INTEGER

Specifies a priority between 1 and 1000. A task with higher priority
is more likely to get the requested resources.

This attribute is inherited by sub tasks if specified prior to the
definition of the sub task.

-------------------------------------------------------------------------------
account <id>
id: ID

Specifies the account that all costs associated with this task will be
credited to.

This attribute is inherited by sub tasks if specified prior to the
definition of the sub task.

-------------------------------------------------------------------------------
startcredit <amount>
amount: REAL

Specifies an amount that is credited to the account specified by the
'account' property at the moment the tasks starts.

-------------------------------------------------------------------------------
endcredit <amount>
amount: REAL

Specifies an amount that is credited to the account specified by the
'account' property at the moment the tasks ends.

-------------------------------------------------------------------------------
Tasks may be nested and some attributes are inherited by the sub tasks.

===============================================================================
account <id> <name> <type>
id: ID
name: STRING
type: ID

Optional attributes:

-------------------------------------------------------------------------------
account <id> <name>

Accounts may be nested. An account that has sub accounts may not have
a balance or a kotrusid.

-------------------------------------------------------------------------------
credit <date> <description> <amount>
date: DATE
description STRING
amount: REAL

Credits the specified amount to the account at the specified date. The
description should contain some information about the reason for the
transaction.

-------------------------------------------------------------------------------
kotrusid <id>
id: STRING

The KoTrus ID of the account (Kostentraeger).

-------------------------------------------------------------------------------
Declares an account. Accounts can be used to calculate costs of tasks
or the whole project. Account declaration may be nested but only the
top level accounts may have a type attribute specified. All
sub-accounts inherit this type. The type may be 'Cost' or 'Revenue'.

===============================================================================
resource <id> <name>
id: ID
name: STRING

Optional attributes:

-------------------------------------------------------------------------------
resource <id> <name>

Resources may be nested to create groups. A nested resource inherits
the attributes of the parent resource. But only those attributs are
inherited that have been specified prior to the declaration of the
nested resource.

-------------------------------------------------------------------------------
mineffort <value>
value: REAL

The daily minimum effort for a resource. Resources that are
used less than this value will be marked in the report.

-------------------------------------------------------------------------------
maxeffort <value>
value: REAL

The daily maximum effort for a resource. Resources will not be
scheduled to be used more than this value. A value of 1.0 means a
whole working day. 0.5 means half a working day.

-------------------------------------------------------------------------------
efficiency <value>
value: REAL

The efficiency of the resource. This can be used to describe a team as
a resource. A team of five should have an efficiency of 5.0.

-------------------------------------------------------------------------------
rate <value>
value: REAL

The daily costs of the resource.

-------------------------------------------------------------------------------
kotrusid <id>
id: STRING

The KoTrus ID of the resource (email address).

-------------------------------------------------------------------------------
vacation <from> [- <to>]
from: DATE
to: DATE

Specifies a vacation for a resource. The to value is NOT included in
the vacation.

-------------------------------------------------------------------------------
workinghours <weekday> <from> - <to>[,<from>-<to>]
weekday: WEEKDAY
from: TIME
to: TIME

Sets the working hours to the specified intervals. If no hours are
specified for a day, the global definitions are used.

-------------------------------------------------------------------------------
shift <id> <from> - <to>
id: ID
from: DATE
to: DATE

Assignes the resource to a defined shift during the specified
interval. Multiple shifts can be defined but shift invervals may not
overlap.

-------------------------------------------------------------------------------

===============================================================================

shift <id> <name>
id: ID
name: STRING

The following optional parameter may be used. At least one optional
parameter must be specified.

-------------------------------------------------------------------------------

shift <id> <name>
id: ID
name: STRING

Shifts may be nested. A nested shift inherits the attributes of the
enclosing shift.

-------------------------------------------------------------------------------
workinghours <weekday> <from>-<to>[,<from>-<to>]
weekday: WEEKDAY
from: TIME
to: TIME

Sets the working hours to the specified intervals. If no hours are
specified for a day, the global definitions are used. If no working
hours should be specified for a day the keyword 'off' must be used
instead of the time interval.

-------------------------------------------------------------------------------
When several resource have the same working hours these working hours
should be defined as shifts. Each shift must have a unique ID.
Resources can be assigned to shifts for certain intervals. Ref.
Resources.

===============================================================================
vacation name <start> [- <end>]
name: STRING
start: DATE
end: DATE

Defines a vacation period for all resources. The end value is NOT part
of the vacation. So 2001-12-24 - 2001-12-25 specifies one day of
vacation, not two days.

===============================================================================
hours <weekday> <from>-<to>[,<from>-<to>]
weekday: WEEKDAY
from: TIME
to: TIME

Sets the working hours to the specified intervals. The values are used
as default values for all resources defined afterwards. The default
values are 08:00-12:00 and 13:00-17:00 from Mon - Fri.

===============================================================================
workinghoursperday <value>
value: INTEGER

Specifies the number of working hours per day. This value is used to
calculate the daily load from the number of booked hours. If
workingHoursPerDay is set to 8 and a resource is used for 12 hours on
a day, the daily load is 1.5. Change this value with care since it
affects a lot of internal calculations!

===============================================================================
priority <value> value: INTEGER

The default scheduling priority for tasks. The value must be between 1
and 1000 and is inherited by all tasks if no other priority is
specified.

===============================================================================
mineffort <value> value: REAL

The default daily minimum effort for a resource. Resources that are
used less than this value will be marked in the report. This value
will be used for all subsequent resource declarations unless specified
otherwise.

===============================================================================
maxeffort <value> value: REAL

The default daily maximum effort for a resource. Resources will not be
scheduled more than this value. This value will be used for all
subsequent resource declarations unless specified otherwise.

===============================================================================
rate <money>
money: REAL

The default daily rate for using a resource full-time. This value will
be used for all subsequent resource declarations unless specified
otherwise.

===============================================================================
currency <text>
text: STRING

The currency for money values in reports.

===============================================================================
currencydigits <number> 
number: INTEGER

The number of fraction digits.

===============================================================================
include <filename> 
filename: STRING

Includes the specified filename as if its contense would be written
instead of the include property. include commands can be used within
global scope or between property declarations of tasks, resources and
accounts.

===============================================================================
macro <id> [ body ]
id: ID

The body is not optional it must be enclosed in [ ]. Macros can be
declared like this:

macro foo [ This text ]

If later ${foo} is found in the project file it is expanded to ' This
text '. Macros may have arguments. Arguments are special macros with
numbers as names. The number specifies the index of the argument.

macro foo [ This ${1} text ]

will expend to ' This stupid text ] if called as ${foo
"stupid"}. Macros may call other macros.

Macro IDs should have at least one upper case letter as all lower case
letter IDs may be used in later version for build-in macros like 'if',
'expr' or 'for'.

===============================================================================
flags <id>[,<id>]
id: ID

Declares the specified flags. Flags can be assigned to tasks,
resources or accounts to be used as filters during report
generation. It is legal to declared a flag more than once.

===============================================================================
timingresolution <value> <unit>
value: INTERGER
unit: UNIT

Sets the minimum timing resolution. The smaller the value, the longer
the schedulings process needs. The default is 1 hour. The smallest
value is 5 min.

===============================================================================
htmltaskreport <filename>
filename: STRING

Optional attributes:

-------------------------------------------------------------------------------
columns <colid>[,<colid>]
colid: ID

Specifies which columns should be included in the task report. The
following values for colid are available:

no: The task index.

id: The global ID of a task.

name: The name of a task, resource or account.

start: The start date of a task.

end: The end date of a task.

minstart: The earliest wanted start date.

maxstart: The latest wanted start date.

minend: The earliest wanted end date.

maxend: The latest wanted end date.

priority: The scheduling priority.

resources: The names of the used resources.

depends: The task index of the tasks that this task depends on.

follows: The task index of the tasks that depend on this task.

responsible: The name of the resource responsible for a task.

responsibilies: A list of all tasks indicies that a resource is
responsible for.

note: The description of the task.

daily: A day-by-day calendar view of the tasks.

weekly: A week-by-week calendar view of the tasks.

monthly: A month-by-month calendar view of the tasks.

-------------------------------------------------------------------------------
start <day>
day: DATE

The start date for the calender view.

-------------------------------------------------------------------------------
end <day>
day: DATE

The end date for the calender view.

-------------------------------------------------------------------------------
headline <text>
text: STRING

Defines the headline used for the report.

-------------------------------------------------------------------------------
caption <text>
text: STRING

Defines the caption used for the report.

-------------------------------------------------------------------------------
sorttasks <criteria>
criteria: SORTINGCRITERIA

The sorting criteria specifies how the tasks in the generated report
will be sorted. Possible values are:

tasktree: This is the default and creates a list with subtasks
indented and grouped together. If this sorting is used parent tasks
are shown when sub tasks are not hidden even if the parent task
matches the hide expression.

tree: Show nesting with indentation

indexup: Last index on top

indexdown: First index on top

idup: Last ID on top

iddown: First ID on top

fullnameup: Last full name on top

fullnamedown: First full name on top

nameup: Last name on top

namedown: First name on top

startup: Latest start date on top

startdown: Earliest start date on top

endup: Latest end date on top

enddown: Earliest end date on top

priorityup: Lowest priority on top

prioritydown: Highest priority on top

responsibleup: Last name of responsible on top

responsibledown: First name of responsible on top

mineffortup: Smallest minimal effort on top

mineffortdown: Largest minimal effort on top

maxeffortup: Smallerst maximum effort on top

maxeffortdown: Largest maximum effort on top

rateup: Smallest rate on top

ratedown: Largest rate on top

kotrusidup: Last kotrusid on top

kotrusiddown: First kotrusid on top

-------------------------------------------------------------------------------
showActual

If used not only the plan values are listed in the table, but also the
actual values. The actual values are put underneath the plan values.

-------------------------------------------------------------------------------
hidetask <expression>
expression: LOGICALEXPRESSION

List only tasks that don't have flags that meet the described logical
expression.

-------------------------------------------------------------------------------
rolluptask <expression>
expression: LOGICALEXPRESSION

Don't show sub tasks of tasks that have flags that meet the described
logical expression.

-------------------------------------------------------------------------------
hideresource <expression>
expression: LOGICALEXPRESSION

List only resources that don't have flags that meet the described logical
expression.

-------------------------------------------------------------------------------
rollupresource <expression>
expression: LOGICALEXPRESSION

Don't show sub resources of resources that have flags that meet the
described logical expression.

-------------------------------------------------------------------------------
Generates a report of all tasks (excluding hidden and filtered) in
HTML format. Multiple declarations of htmlTaskReport can be made to
generate several different reports with one run of TaskJuggler.

===============================================================================
htmlresourcereport <filename>
filename: STRING

Optional attributes:

Ref. htmltaskresport

===============================================================================
htmlaccountreport <filename>
filename: STRING

Optional attributes:

-------------------------------------------------------------------------------
columns <colid>[,<colid>]
colid: ID

Specifies which columns should be included in the task report. The
following values for colid are available:

no: The task index.

id: The global ID of a task.

name: The name of a task, resource or account.

total: Total accumulated values.

daily: A day-by-day calendar view of the accounts.

weekly: A week-by-week calendar view of the accounts.

monthly: A month-by-month calendar view of the accounts.

quaterly: A quarter-by-quarter calender view of the accounts.

-------------------------------------------------------------------------------
start <day>
day: DATE

The start date for the calender view.

-------------------------------------------------------------------------------
end <day>
day: DATE

The end date for the calender view.

-------------------------------------------------------------------------------
show <flag>[,flag]
flag: ID

List only accounts that have the listed flags. This attribute
conflicts with 'hide'.

-------------------------------------------------------------------------------
hide <flag>[,flag]

List only accounts that don't have the listed flags. This attribute
conflicts with 'show'.

-------------------------------------------------------------------------------

===============================================================================

kotrusMode <mode>
mode: STRING

sets the kotrus mode. Valid values are 
 - 'NoKotrus' for no KoTrus connection
 - 'XML' for to read from an XML-File (not yet supported)
 - 'DB' to read from database which must be configured in your taskjugglerrc

===============================================================================
