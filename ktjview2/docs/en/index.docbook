<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd" [
  <!ENTITY ktjview2 "<application>TaskJuggler IDE</application>">
  <!ENTITY kappname "&ktjview2;"><!-- Do *not* replace kappname-->
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE"><!-- change language only here -->
]>
<!-- The language must NOT be changed here. -->

<book lang="&language;">

<!-- This header contains all of the meta-information for the document such
as Authors, publish date, the abstract, and Keywords -->

<bookinfo>
<title>The &ktjview2; Handbook</title>

<authorgroup>
<author>
<firstname>Luk&aacute;&scaron;</firstname>
<surname>Tinkl</surname>
<affiliation>
<address><email>lukas.tinkl@suse.cz</email></address>
</affiliation>
</author>
</authorgroup>

<!-- TRANS:ROLES_OF_TRANSLATORS -->

<copyright>
<year>2004</year>
<holder>SUSE AG</holder>
</copyright>

<!-- Translators: put here the copyright notice of the translation -->
<!-- Put here the FDL notice.  Read the explanation in fdl-notice.docbook
     and in the FDL itself on how to use it. -->
<legalnotice>&FDLNotice;</legalnotice>

<!-- Date and version information of the documentation
Don't forget to include this last date and this last revision number, we
need them for translation coordination !
Please respect the format of the date (YYYY-MM-DD) and of the version
(V.MM.LL), it could be used by automation scripts.
Do NOT change these in the translation. -->

<date>2004-11-19</date>
<releaseinfo>0.5</releaseinfo>

<!-- Abstract about this handbook -->

<abstract>
<para>
&ktjview2; is an advanced GUI frontend for the TaskJuggler project management
suite and the KDE desktop.
</para>
</abstract>

<!-- This is a set of Keywords for indexing by search engines.
Please at least include KDE, the KDE package it is in, the name
of your application, and a few relevant keywords. -->

<keywordset>
<keyword>KDE</keyword>
<keyword>TaskJuggler</keyword>
<keyword>GUI</keyword>
<keyword>Gantt</keyword>
</keywordset>

</bookinfo>

<!-- The contents of the documentation begin here.  Label
each chapter so with the id attribute. This is necessary for two reasons: it
allows you to easily reference the chapter from other chapters of your
document, and if there is no ID, the name of the generated HTML files will vary
from time to time making it hard to manage for maintainers and for the CVS
system. Any chapter labelled (OPTIONAL) may be left out at the author's
discretion. Other chapters should not be left out in order to maintain a 
consistent documentation style across all KDE apps.-->

<chapter id="introduction">
<title>Introduction</title>

<!-- The introduction chapter contains a brief introduction for the
application that explains what it does and where to report
problems. Basically a long version of the abstract. Don't include a
revision history. (see installation appendix comment) -->

<para>
The TaskJuggler IDE project aims at developing an easy-to-use frontend to
TaskJuggler that integrates well into the KDE desktop.

Features:
</para>

<itemizedlist>
<listitem><para>Load, schedule, and display TaskJuggler project files (*.tjp) and XML reports
  (*.tjx), using TaskJuggler as a library.</para></listitem>
<listitem><para>Project info page.</para></listitem>
<listitem><para>Customizable Gantt view based on KDGantt.</para></listitem>
<listitem><para>Resource and Task views with type-ahead find with many
filtering and sorting options.</para></listitem>
<listitem><para>Editor integration: Kate or KVim (depending on KDE settings) are used as a
  TaskJuggler project file editor.</para></listitem>
<listitem><para>Syntax highlighting in the editor.</para></listitem>
<listitem><para>Reload project files after changing them in the integrated editor or
  externally. If an error occurs, the file that throws the error is opened with
  the line that triggered the error highlighted.</para></listitem>
<listitem><para>Report view with two predefined reports: Resource Usage and
  Task Coverage.</para></listitem>
<listitem><para>Printing (only for Gantt view at the moment).</para></listitem>
</itemizedlist>

</chapter>

<chapter id="using-ktjview2">
<title>Using &ktjview2;</title>

<!-- This chapter should tell the user how to use your app. You should use as
many sections (Chapter, Sect1, Sect3, etc...) as is necessary to fully document
your application. -->

<para>
As you can see on the screenshot below, the main window is comprised of several
components between which you can switch by using the sidebar on the left side.
</para>

<para>
<screenshot>
<screeninfo>Here's a screenshot of &ktjview2;</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="screenshot.png" format="PNG"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the main window</phrase>
	  </textobject>
      <caption><para>Screenshot of the main window</para></caption>
	</mediaobject>
</screenshot>
</para>

<sect1 id="info-view">
<title>Info View</title>

<para>This view displays general information about the project, such as the
project name, currency, start and end date, copyright or version number.</para>

</sect1>

<sect1 id="gantt-view">
<title>Gantt View</title>

<para>
The gantt view is divided into two parts: task list and chart. The left
part displays a hierarchical list of tasks and the other part depicts their
duration in time. The chart has a horizontal header which represents the timeline
of the project. Each task is drawn as a box whose color can be configured in
the Settings dialog. The color corresponds to the type of the task: group task,
milestone or normal task.
</para>

<para>
If you leave you mouse pointer over the task box for a short while, you will
get a tooltip with a detailed information about the task.
</para>

<para>
Every item has a context menu with the option to jump to the
<link linkend="task-view">task details</link>. 
</para>

</sect1>


<sect1 id="resource-view">
<title>Resource View</title>

<para>
The resource view displays a tree-like overview of the project's
resources. As with other listviews, any column can be sorted by clicking on its
header or reordered via drag'n'drop.
</para>

</sect1>

<sect1 id="task-view">
<title>Task View</title>

<para>
The task view shows a flat list of tasks in the project. It is otherwise
similar to the <link linkend="resource-view">resource view</link>.
</para>

<para>
<screenshot>
<screeninfo>Screenshot of the Quick Search bar</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="quick_search.png" format="PNG"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the Quick Search bar</phrase>
	  </textobject>
      <caption><para>Screenshot of the Quick Search bar</para></caption>
	</mediaobject>
</screenshot>
</para>

<para>Both Resource and Task view contain a very useful feature called Quick
Search. Using the Quick Search toolbar you can easily search and filter for the
text you want, optionally in some columns only.</para>

</sect1>

<sect1 id="report-view">
<title>Report View</title>

<para>
&ktjview2; currently contains two predefined reports: 
<guimenuitem>Task coverage</guimenuitem> and <guimenuitem>Resource usage</guimenuitem>
which are accessible from the Reports menu. Either choice opens a dialog (see
below) where you can set some report options.
</para>

<para>
<screenshot>
<screeninfo>Report options</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="report_dlg.png" format="PNG"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the report options dialog.</phrase>
	  </textobject>
      <caption><para>Screenshot of the report options dialog</para></caption>
	</mediaobject>
</screenshot>
</para>

<para>
Once you're content with the start, end date and scale, click on the
<guibutton>Create</guibutton> button to generate the report.
</para>

</sect1>

<sect1 id="editor-view">
<title>Editor View</title>

<warning><para>Editing source code is recommended to experienced users only.</para></warning>

<para>
The editor view allows you to modify the project's source code directly. The
editor supports common operations, such as <guimenuitem>Cut</guimenuitem>,
<guimenuitem>Copy</guimenuitem> or <guimenuitem>Paste</guimenuitem> and unlimited
<guimenuitem>Undo</guimenuitem>/<guimenuitem>Redo</guimenuitem> that are
accessible from the Edit menu.
</para>

<para>
Once you manually change your project, you might want to save the changes
(<guimenuitem><accel>F</accel>ile</guimenuitem> -&gt;
<guimenuitem><accel>S</accel>ave</guimenuitem>) and then rebuild it
(<guimenuitem><accel>T</accel>ools</guimenuitem> -&gt;
<guimenuitem><accel>R</accel>ebuild project</guimenuitem>).
</para>

</sect1>

</chapter>

<chapter id="commands">
<title>Command Reference</title>

<!-- (OPTIONAL, BUT RECOMMENDED) This chapter should list all of the
application windows and their menubar and toolbar commands for easy reference.
Also include any keys that have a special function but have no equivalent in the
menus or toolbars. This may not be necessary for small apps or apps with no tool
or menu bars. -->

<sect1 id="ktjview2-mainwindow">
<title>The main &ktjview2; window</title>

<sect2>
<title>The File Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo action="simul">&Ctrl;<keycap>N</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>New</guimenuitem>
</menuchoice></term>
<listitem><para><action>Creates a new document</action></para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo action="simul">&Ctrl;<keycap>S</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Save</guimenuitem>
</menuchoice></term>
<listitem><para><action>Saves the document</action></para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo action="simul">&Ctrl;<keycap>Q</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Quit</guimenuitem>
</menuchoice></term>
<listitem><para><action>Quits</action> &ktjview2;</para></listitem>
</varlistentry>
</variablelist>
</para>

</sect2>

<sect2>
<title>The <guimenu>Help</guimenu> Menu</title>

<!-- Assuming you have a standard help menu (help, what's this, about -->
<!-- &ktjview2;, about KDE) then the documentation is already written. -->
<!-- The following entity is valid anywhere that a variablelist is -->
<!-- valid.  -->

&help.menu.documentation;

</sect2>

</sect1>
</chapter>

<chapter id="faq">
<title>Questions and Answers</title>

<qandaset id="faqlist">

<qandaentry>
<question>
<para>What are the planned features?</para>
</question>
<answer>
<para>You can find the list of planned on ongoing efforts on &ktjview2;'s 
<ulink url="http://www.taskjuggler.org/ide.php">homepage</ulink>.</para>
</answer>
</qandaentry>

</qandaset>
</chapter>

<chapter id="credits">

<!-- Include credits for the programmers, documentation writers, and
contributors here. The license for your software should then be included below
the credits with a reference to the appropriate license file included in the KDE
distribution. -->

<title>Credits and License</title>

<para>
&ktjview2;
</para>
<para>
Program copyright 2004 SUSE AG <email>info@suse.com</email>
</para>
<para>
Contributors:
<itemizedlist>
<listitem><para>Luk&aacute;&scaron; Tinkl <email>lukas.tinkl@suse.cz</email></para>
</listitem>
<listitem><para>Joachim Werner <email>joe@suse.de</email></para>
</listitem>
</itemizedlist>
</para>

<para>
Documentation copyright 2004 SUSE AG <email>info@suse.com</email>
</para>

<!-- TRANS:CREDIT_FOR_TRANSLATORS -->

&underFDL;               <!-- FDL: do not remove -->

<!-- Determine which license your application is licensed under, 
     and delete all the remaining licenses below:

     (NOTE:  All documentation are licensed under the FDL, 
     regardless of what license the application uses) -->

&underGPL;        	 <!-- GPL License -->
</chapter>

<appendix id="installation">
<title>Installation</title>

<sect1 id="getting-ktjview2">
<title>How to obtain &ktjview2;</title>
<para>
At the moment the only way of running the TaskJuggler IDE is downloading and
building the daily CVS snapshot of thw whole TaskJuggler suite. The TaskJuggler
IDE is currently called ktjview2 because it started as a replacement for
ktjview. We are looking for a more pronouncable name. If you have any
suggestions please <ulink url="http://www.taskjuggler.org/contact.php">drop us
a note</ulink>!
</para>
</sect1>

<sect1 id="requirements">
<title>Requirements</title>

<!--
List any special requirements for your application here. This should include:
.Libraries or other software that is not included in kdesupport,
kdelibs, or kdebase.
.Hardware requirements like amount of RAM, disk space, graphics card
capabilities, screen resolution, special expansion cards, etc.
.Operating systems the app will run on. If your app is designed only for a
specific OS, (you wrote a graphical LILO configurator for example) put this
information here.
-->

<para>
In order to successfully use &ktjview2;, you need &kde; 3.3 and the main
TaskJuggler library.
</para>

<para>
You can get the whole TaskJuggler package on its
<ulink url="http://www.taskjuggler.org/">home page</ulink>.
</para>

</sect1>

<sect1 id="compilation">
<title>Compilation and Installation</title>

<para>
In order to compile &ktjview2;, you must unpack the TaskJuggler tarball and
issue the following:
</para>

<para>
<screen>
./configure --with-kde-support=yes --prefix=`kde-config --prefix`
make
make install
</screen>
</para>

</sect1>

</appendix>

&documentation.index;
</book>

<!--
Local Variables:
mode: xml
sgml-minimize-attributes:nil
sgml-general-insert-case:lower
sgml-indent-step:0
sgml-indent-data:nil
End:

vim:tabstop=2:shiftwidth=2:expandtab 
-->
