This example shows how to split big projects into smaller sub projects
but still have cross dependencies. This idea is to export certain
tasks as fixed tasks from one project (project1) and include them in
the other project (project2). So project2 can reference tasks from
project1 without knowing all the details and without the need to
combine both project into one mega project.

There are a few things to watch though. Project1 and Project2 share a
common resource pool. Since the projects are scheduled seperately from
each other, there is no warning for double-booking of resources. You
probably want to use distinct groups of people for each project.

Theoretically you can do cyclic includes, but this would require an
extra amount of care since alternating scheduling runs are not
guaranteed to result in fixed interface dates. With such situations
you have no way but to create a super project.

In future versions of taskjuggler we might add support for exporting
resource scheduling information as well. But there is no way to use
this with cyclic imports. So better don't use them at all.

